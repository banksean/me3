load("@aspect_rules_ts//ts:defs.bzl", "ts_config")
load("@bazel_gazelle//:def.bzl", "gazelle")
load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@rules_python//python:defs.bzl", "py_binary", "py_test")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")
load("@rules_python//python/entry_points:py_console_script_binary.bzl", "py_console_script_binary")

# Replace the github url with whatever is appropriate.
# gazelle:prefix github.com/banksean/me3
gazelle(name = "gazelle")

buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./bazel/rbe/generated/*",
        "./node_modules/*",
        "./**/node_modules/*",
    ],
    lint_mode = "warn",
)

alias(
    name = "go",
    actual = "//bazel/tools/go",
    visibility = ["//visibility:public"],
)

#########
# gofmt #
#########

# Sample usage: "bazel run //:gofmt -- -s -w .".
alias(
    name = "gofmt",
    actual = "@go_sdk//:bin/gofmt",
    visibility = ["//visibility:public"],
)

#############
# goimports #
#############

# Sample usage: "bazel run //:goimports "--run_under=cd $PWD &&" -- -w myfile.go".
alias(
    name = "goimports",
    actual = "@org_golang_x_tools//cmd/goimports",
    visibility = ["//visibility:public"],
)

# This rule adds a convenient way to update the requirements file:
# bazel run //:requirements.update
compile_pip_requirements(
    name = "requirements",
    src = "requirements.in",
    requirements_txt = "requirements.txt",
)

# Global tsconfig.json file.
ts_config(
    name = "ts_config",
    src = "tsconfig.json",
    visibility = ["//visibility:public"],
)

npm_link_all_packages(name = "node_modules")

alias(
    name = "format",
    actual = "//bazel/tools/format",
)
